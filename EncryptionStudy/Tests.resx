<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Answer10_1" xml:space="preserve">
    <value>a) Independent blocks encryption</value>
  </data>
  <data name="Answer10_2" xml:space="preserve">
    <value>b)  Encryption, dependent on the previous blocks</value>
  </data>
  <data name="Answer10_3" xml:space="preserve">
    <value>c) Whole block completion</value>
  </data>
  <data name="Answer11_1" xml:space="preserve">
    <value>a) A recipient will not be able to find the end of useful data</value>
  </data>
  <data name="Answer11_2" xml:space="preserve">
    <value>b) There is a risk of information leak</value>
  </data>
  <data name="Answer11_3" xml:space="preserve">
    <value>c) There is no correct answer</value>
  </data>
  <data name="Answer12_1" xml:space="preserve">
    <value>a) Substitution, permutation, XOR ciphers</value>
  </data>
  <data name="Answer12_2" xml:space="preserve">
    <value>b) Symmetric, asymmetric and streamer ciphers</value>
  </data>
  <data name="Answer12_3" xml:space="preserve">
    <value>c) Substitution and permutation ciphers</value>
  </data>
  <data name="Answer13_1" xml:space="preserve">
    <value>a) A method of cryptographic conversion, which lies in a swap of initial text symbols according to a certain rule</value>
  </data>
  <data name="Answer13_2" xml:space="preserve">
    <value>b) A system of block substitution</value>
  </data>
  <data name="Answer13_3" xml:space="preserve">
    <value>c) A method of conversion, which lies in a substitution of initial text symbols to another ones.</value>
  </data>
  <data name="Answer14_1" xml:space="preserve">
    <value>a) XOR cipher</value>
  </data>
  <data name="Answer14_2" xml:space="preserve">
    <value>b) Streamer cipher</value>
  </data>
  <data name="Answer14_3" xml:space="preserve">
    <value>c) Substitution cipher</value>
  </data>
  <data name="Answer15_1" xml:space="preserve">
    <value>a) Block encryption</value>
  </data>
  <data name="Answer15_2" xml:space="preserve">
    <value>b) Streamer encryption</value>
  </data>
  <data name="Answer15_3" xml:space="preserve">
    <value>c) To the both types of encryption</value>
  </data>
  <data name="Answer16_1" xml:space="preserve">
    <value>a) A symmetric algorithm works slower than an asymmetric one</value>
  </data>
  <data name="Answer16_2" xml:space="preserve">
    <value>b) An asymmetric algorithm works slower than a symmetric one</value>
  </data>
  <data name="Answer16_3" xml:space="preserve">
    <value>c) Both algorithms require lots of computational resources</value>
  </data>
  <data name="Answer17_1" xml:space="preserve">
    <value>a) 3</value>
  </data>
  <data name="Answer17_2" xml:space="preserve">
    <value>b) 2</value>
  </data>
  <data name="Answer17_3" xml:space="preserve">
    <value>c) 4</value>
  </data>
  <data name="Answer18_1" xml:space="preserve">
    <value>a) The same cryptographic strength as the strongest cipher it uses</value>
  </data>
  <data name="Answer18_2" xml:space="preserve">
    <value>b) The same cryptographic strength as the weakest cipher it uses</value>
  </data>
  <data name="Answer18_3" xml:space="preserve">
    <value>c) Cryptographic strength depends on all the ciphers used</value>
  </data>
  <data name="Answer19_1" xml:space="preserve">
    <value>a) Secret information, used by a cryptographic algorithm while encrypting/ decrypting of the message</value>
  </data>
  <data name="Answer19_2" xml:space="preserve">
    <value>b) Randomly generated key of a symmetric cipher for a hybrid encryption</value>
  </data>
  <data name="Answer19_3" xml:space="preserve">
    <value>c) There is no correct answer</value>
  </data>
  <data name="Answer1_1" xml:space="preserve">
    <value>a) 3</value>
  </data>
  <data name="Answer1_2" xml:space="preserve">
    <value>b) 2</value>
  </data>
  <data name="Answer1_3" xml:space="preserve">
    <value>c) 4</value>
  </data>
  <data name="Answer20_1" xml:space="preserve">
    <value>a)A conversion, when symbols of an initial text are folded according to a module, which is equal in capacity with the alphabet, with symbols of pseudo-random sequence</value>
  </data>
  <data name="Answer20_2" xml:space="preserve">
    <value>b) A XOR form, which converses an open text into encrypted one subsequently, bite by bite.</value>
  </data>
  <data name="Answer20_3" xml:space="preserve">
    <value>c) There is no correct answer</value>
  </data>
  <data name="Answer2_1" xml:space="preserve">
    <value>a)	measures to restrict access to information</value>
  </data>
  <data name="Answer2_2" xml:space="preserve">
    <value>b)	verification of authenticity and intactness of information</value>
  </data>
  <data name="Answer2_3" xml:space="preserve">
    <value>c)	 both variants are correct</value>
  </data>
  <data name="Answer3_1" xml:space="preserve">
    <value>a)	Cheapness</value>
  </data>
  <data name="Answer3_2" xml:space="preserve">
    <value>b)	A list of possible threats</value>
  </data>
  <data name="Answer3_3" xml:space="preserve">
    <value>c)	Necessity of protection</value>
  </data>
  <data name="Answer4_1" xml:space="preserve">
    <value>a)	A secret text for encryption/decryption of the message</value>
  </data>
  <data name="Answer4_2" xml:space="preserve">
    <value>b)	A secret formula for encryption/decryption of the message</value>
  </data>
  <data name="Answer4_3" xml:space="preserve">
    <value>c)	A secret information for encryption/decryption of the message</value>
  </data>
  <data name="Answer5_1" xml:space="preserve">
    <value>a)	Symmetric has only one key, while asymmetric has 2 keys</value>
  </data>
  <data name="Answer5_2" xml:space="preserve">
    <value>b)	Symmetric has two keys, while asymmetric has one</value>
  </data>
  <data name="Answer5_3" xml:space="preserve">
    <value>c)	There are no differences</value>
  </data>
  <data name="Answer6_1" xml:space="preserve">
    <value>a) Symmetric encryption</value>
  </data>
  <data name="Answer6_2" xml:space="preserve">
    <value>b) Asymmetric encryption</value>
  </data>
  <data name="Answer6_3" xml:space="preserve">
    <value>c) Both types of encryption</value>
  </data>
  <data name="Answer7_1" xml:space="preserve">
    <value>a) A study of methods of detection of vulnerable places in an algorithm</value>
  </data>
  <data name="Answer7_2" xml:space="preserve">
    <value>b) A study of methods of initial text detection</value>
  </data>
  <data name="Answer7_3" xml:space="preserve">
    <value>c) Both variants are correct</value>
  </data>
  <data name="Answer8_1" xml:space="preserve">
    <value>a) The text is divided only into 2 blocks</value>
  </data>
  <data name="Answer8_2" xml:space="preserve">
    <value>b) The text is divided into a great amount of blocks of different length</value>
  </data>
  <data name="Answer8_3" xml:space="preserve">
    <value>c) The text is divided into equal blocks</value>
  </data>
  <data name="Answer9_1" xml:space="preserve">
    <value>a) Encryption is impossible</value>
  </data>
  <data name="Answer9_2" xml:space="preserve">
    <value>b) Block is completed to the necessary length</value>
  </data>
  <data name="Answer9_3" xml:space="preserve">
    <value>c) Unfilled block does not participate in encryption</value>
  </data>
  <data name="Question1" xml:space="preserve">
    <value>How many aspects of protection exist?</value>
  </data>
  <data name="Question10" xml:space="preserve">
    <value>In which of the methods the unfinished block is filled with zero ones and a single bite?</value>
  </data>
  <data name="Question10Answer" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Question11" xml:space="preserve">
    <value>Why independent blocks encryption is not efficient when dealing with great amounts of information?</value>
  </data>
  <data name="Question11Answer" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Question12" xml:space="preserve">
    <value>Block ciphers are divided into:</value>
  </data>
  <data name="Question12Answer" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Question13" xml:space="preserve">
    <value>Substitution cipher is –</value>
  </data>
  <data name="Question13Answer" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Question14" xml:space="preserve">
    <value>The simplest block cipher is-</value>
  </data>
  <data name="Question14Answer" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Question15" xml:space="preserve">
    <value>XOR is related to</value>
  </data>
  <data name="Question15Answer" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Question16" xml:space="preserve">
    <value>Mark the correct statement</value>
  </data>
  <data name="Question16Answer" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Question17" xml:space="preserve">
    <value>The number of ways of block encryption is</value>
  </data>
  <data name="Question17Answer" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Question18" xml:space="preserve">
    <value>Hybrid key has</value>
  </data>
  <data name="Question18Answer" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Question19" xml:space="preserve">
    <value>Session key is-</value>
  </data>
  <data name="Question19Answer" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Question1Answer" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Question2" xml:space="preserve">
    <value>The protection of information means-</value>
  </data>
  <data name="Question20" xml:space="preserve">
    <value>Permutation cipher is</value>
  </data>
  <data name="Question20Answer" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Question2Answer" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Question3" xml:space="preserve">
    <value>The principle of the second aspect of information security</value>
  </data>
  <data name="Question3Answer" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Question4" xml:space="preserve">
    <value>A key is-</value>
  </data>
  <data name="Question4Answer" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Question5" xml:space="preserve">
    <value>What is the difference between a symmetric encryption and an asymmetric one?</value>
  </data>
  <data name="Question5Answer" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Question6" xml:space="preserve">
    <value>Hybrid cipher uses:</value>
  </data>
  <data name="Question6Answer" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Question7" xml:space="preserve">
    <value>Cryptanalysis is-</value>
  </data>
  <data name="Question7Answer" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Question8" xml:space="preserve">
    <value>The peculiarity of block encryption is-</value>
  </data>
  <data name="Question8Answer" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Question9" xml:space="preserve">
    <value>If the length of a message is less than the length of a block, then</value>
  </data>
  <data name="Question9Answer" xml:space="preserve">
    <value>1</value>
  </data>
</root>